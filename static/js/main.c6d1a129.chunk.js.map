{"version":3,"sources":["components/Input/index.js","components/Layout/index.js","serviceWorker.js","index.js","components/Output/index.js"],"names":["Input","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","budget","nome","spesa","handleChangeBudget","bind","assertThisInitialized","handleSubmitBudget","handleChangeNome","handleChangeSpesa","handleSubmitSpesa","resetAll","event","setState","target","value","localStorage","setItem","getItem","oldListaSpese","JSON","parse","stringify","concat","toConsumableArray","removeItem","window","location","reload","react_default","a","createElement","onSubmit","className","type","id","placeholder","onChange","onClick","Component","Layout","components_Input","Output","Boolean","hostname","match","ReactDOM","render","components_Layout","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","valoreBudget","nomeHtml","nomeParagraphs","spesaHtml","spesaParagraphs","spesaTotale","spesaImporti","residuo","totaleSpese","listaSpese","i","length","push","join","eval","react__WEBPACK_IMPORTED_MODULE_5___default","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"static/js/main.c6d1a129.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Input extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            budget: 0,\r\n            nome: '',\r\n            spesa: 0\r\n        }\r\n\r\n        this.handleChangeBudget = this.handleChangeBudget.bind(this);\r\n        this.handleSubmitBudget = this.handleSubmitBudget.bind(this);\r\n        this.handleChangeNome = this.handleChangeNome.bind(this);\r\n        this.handleChangeSpesa = this.handleChangeSpesa.bind(this);\r\n        this.handleSubmitSpesa = this.handleSubmitSpesa.bind(this);\r\n        this.resetAll = this.resetAll.bind(this);\r\n    }\r\n\r\n    handleChangeBudget(event) {\r\n        this.setState({\r\n            budget: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmitBudget(event) {\r\n        if ( this.state.budget !== 0 ) {\r\n            localStorage.setItem('budget',this.state.budget)\r\n        };\r\n    }\r\n\r\n    handleChangeNome(event) {\r\n        this.setState({\r\n            nome: event.target.value\r\n        });\r\n    }\r\n\r\n    handleChangeSpesa(event) {\r\n        this.setState({\r\n            spesa: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmitSpesa(event) {\r\n        if ( this.state.nome !== '' && this.state.spesa !== 0 ) {\r\n            if ( !localStorage.getItem('listaSpese') ) {\r\n                localStorage.setItem('listaSpese', JSON.stringify([this.state.nome, this.state.spesa]));\r\n            } else {\r\n                const oldListaSpese = JSON.parse(localStorage.getItem('listaSpese'));\r\n                localStorage.setItem('listaSpese', JSON.stringify([...oldListaSpese, this.state.nome, this.state.spesa]));\r\n            }\r\n        };\r\n    }\r\n\r\n    resetAll() {\r\n        localStorage.removeItem('budget');\r\n        localStorage.removeItem('listaSpese');\r\n        window.location.reload();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmitBudget}>\r\n                    <h3>Il mio budget</h3>\r\n                    <div className=\"row justify-content-md-center\">\r\n                        <div className=\"col-6\">\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                id=\"input-budget\"\r\n                                placeholder=\"Inserire il budget\"\r\n                                value={this.state.value}\r\n                                onChange={this.handleChangeBudget}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-sm btn-block\">Invia</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <form onSubmit={this.handleSubmitSpesa}>\r\n                    <h3>Le mie spese</h3>\r\n                    <div className=\"row justify-content-md-center\">\r\n                        <div className=\"col-6\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"input-nome\"\r\n                                placeholder=\"Inserire la spesa\"\r\n                                value={this.state.value}\r\n                                onChange={this.handleChangeNome}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                id=\"input-spesa\"\r\n                                placeholder=\"Inserire l'importo\"\r\n                                value={this.state.value}\r\n                                onChange={this.handleChangeSpesa}\r\n                            /> \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-md-center\">\r\n                        <div className=\"col-6 m-auto\">\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-sm btn-block\">Invia</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div className=\"row justify-content-md-center\">\r\n                    <div className=\"col-6 m-auto\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-sm btn-block\" onClick={this.resetAll}>Reset</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\nimport Input from '../Input';\r\nimport Output from '../Output';\r\n\r\nclass Layout extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Input />\r\n                <Output />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Layout from '../src/components/Layout';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Layout />\n    ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\r\n\r\nclass Output extends Component {\r\n\r\n    render() {\r\n        \r\n        var valoreBudget = 0;\r\n        valoreBudget = JSON.parse(localStorage.getItem('budget'));\r\n\r\n        if ( localStorage.getItem('listaSpese') ) {\r\n            \r\n            var nomeHtml = '';\r\n            var nomeParagraphs = [];\r\n            var spesaHtml = '';\r\n            var spesaParagraphs = [];\r\n            var spesaTotale = '';\r\n            var spesaImporti = [];\r\n            var residuo = 0;\r\n            var totaleSpese = 0;\r\n\r\n            const listaSpese = JSON.parse(localStorage.getItem('listaSpese'));\r\n            for ( let i = 0; i < listaSpese.length; i = i + 2 ) {\r\n                nomeParagraphs.push(`<p>${listaSpese[i]}</p>`);\r\n            };\r\n            for ( let i = 1; i < listaSpese.length; i = i + 2 ) {\r\n                spesaParagraphs.push(`<p>${listaSpese[i]}</p>`);\r\n            }\r\n            for ( let i = 1; i < listaSpese.length; i = i + 2 ) {\r\n                spesaImporti.push(`${listaSpese[i]}`);\r\n            }\r\n\r\n            nomeHtml = nomeParagraphs.join('');\r\n            spesaHtml = spesaParagraphs.join('');\r\n            spesaTotale = spesaImporti.join('+');\r\n\r\n             //eslint-disable-next-line\r\n            totaleSpese = eval(spesaTotale);  \r\n            residuo = valoreBudget - totaleSpese;\r\n\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h3>Riepilogo</h3>                \r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row justify-content-md-center\">\r\n                        <div className=\"col-6\">\r\n                            <h5>Spesa</h5>\r\n                            <div dangerouslySetInnerHTML={{\r\n                                __html: nomeHtml\r\n                            }}>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h5>Importo</h5>\r\n                            <div dangerouslySetInnerHTML={{\r\n                                __html: spesaHtml\r\n                            }}>\r\n                            </div>\r\n                        </div>\r\n                   </div> \r\n                   <div className=\"row justify-content-md-center\">\r\n                        <div className=\"col-sm-8\">\r\n                            <h3>Totale</h3> \r\n                        </div>\r\n                    </div> \r\n                    <div className=\"row justify-content-md-center\">                        \r\n                        <div className=\"col-sm-4\">\r\n                            <div className=\"card\">\r\n                                <h5 className=\"card-header\">Budget</h5>\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">Il mio patrimonio</h5>\r\n                                    <p className=\"card-text\">{valoreBudget}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <div className=\"card\">\r\n                                <h5 className=\"card-header\">Spese</h5>\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">Le mie uscite</h5>\r\n                                    <p className=\"card-text\">{totaleSpese}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <div className=\"card\">\r\n                                <h5 className=\"card-header\">Residuo</h5>\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">I miei risparmi</h5>\r\n                                    <p className=\"card-text\" id=\"residuo\">{residuo}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Output;"],"sourceRoot":""}